version: '3'
networks:
  pulsar:
    driver: bridge
  suscripcion:
    driver: bridge
  procesamiento:
    driver: bridge
  notificaciones:
    driver: bridge
services:

# Start broker
  broker:
    image: apachepulsar/pulsar:2.7.0
    profiles: ["pulsar"]
    container_name: broker
    hostname: broker
    # restart: on-failure
    networks:
      - pulsar
    ports:
      - 8080:8080
      - 6650:6650
    # environment:
    #   - JAVA_HOME=/usr/lib/jvm/java-11-openjdk
    #   - PULSAR_MEM=" -Xms512m -Xmx512m -XX:MaxDirectMemorySize=1g"
    # volumes:
    #   - ./pulsar/data:/pulsar/data
    #   - ./pulsar/config:/pulsar/conf
    command: /bin/bash -c "bin/pulsar standalone"


  suscripcion-db:
    container_name: suscripcion-db
    image: postgres:latest
    restart: always
    profiles: ["suscripciones"]
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=suscripcion-db
    ports:
      - "5432:5432"
    networks:
      - suscripcion
    volumes:
      - ./microservicio-suscripciones/pgdata:/var/lib/postgresql/data/
      - ./microservicio-suscripciones/sql/create_extension.sql:/docker-entrypoint-initdb.d/create_extension.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    
  # Servicios de Salud Tech Alpes
  suscripciones:
    container_name: suscripciones
    hostname: suscripciones
    build:
      context: ./microservicio-suscripciones
      dockerfile: suscripciones.Dockerfile
    image: suscripciones/flask 
    profiles: ["suscripciones"]
    networks:
      - pulsar
      - suscripcion
    labels:
      SidecarDiscover: "false"
    depends_on:
      suscripcion-db:
          condition: service_healthy
    environment:
      - PULSAR_ADDRESS=broker
      - TESTING=true
      - DB_URL=postgresql://postgres:postgres@suscripcion-db:5432/suscripcion-db
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_HOST=suscripcion-db
      - DB_PORT=5432
      - DB_NAME=suscripcion-db
      - PYTHONUNBUFFERED=1
    ports:
      - "5000:5000"

  procesamiento-db:
    container_name: procesamiento-db
    image: postgres:latest
    restart: always
    profiles: ["procesamiento"]
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin
      - POSTGRES_DB=anonimizacion
    ports:
      - "5433:5432"  # Cambi√© el puerto externo para evitar conflicto
    networks:
      - procesamiento
    volumes:
      - ./microservicio-procesamiento/pgdata:/var/lib/postgresql/data/
      - ./microservicio-procesamiento/sql/create_extension.sql:/docker-entrypoint-initdb.d/create_extension.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin"]
      interval: 5s
      timeout: 5s
      retries: 5
    
  # Servicios de Salud Tech Alpes
  procesamiento:

    container_name: procesamiento
    hostname: procesamiento
    image: procesamiento/flask 
    profiles: ["procesamiento"]
    networks:
      - pulsar
      - procesamiento
    labels:
      SidecarDiscover: "false"
    depends_on:
      procesamiento-db:
        condition: service_healthy
    environment:
      - PULSAR_ADDRESS=broker
      - TESTING=true
      - DB_URL=postgresql://admin:admin@procesamiento-db:5432/anonimizacion
      - DB_USER=admin
      - DB_PASSWORD=admin
      - DB_HOST=procesamiento-db
      - DB_PORT=5432
      - DB_NAME=anonimizacion
      - PYTHONUNBUFFERED=1
    ports:
      - "5002:5000"

  bff_web:
    container_name: bff_web
    hostname: bff_web
    build:
      context: ./bff_web
      dockerfile: bff_web.Dockerfile
    image: bff_web/flask 
    profiles: ["bff_web"]
    networks:
      - pulsar
      - suscripcion
    environment:
      - PULSAR_ADDRESS=broker
      - PYTHONUNBUFFERED=1
    ports:
      - "5005:5000"

  # Servicio de notificaciones
  notificaciones:
    container_name: notificaciones
    hostname: notificaciones
    build:
      context: ./microservicio-notificaciones
      dockerfile: notificaciones.Dockerfile
    image: notificaciones/flask 
    profiles: ["notificaciones"]
    networks:
      - pulsar
      - notificaciones    
    environment:
      - PULSAR_ADDRESS=broker
      - TESTING=true      
      - PYTHONUNBUFFERED=1        
    ports:
      - "5003:5000"   
   
